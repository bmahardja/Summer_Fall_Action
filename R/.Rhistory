axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_5yrs
#Print figure
tiff(filename=file.path(output_root,"Figure_Dayflow_5yrs.tiff"),
type="cairo",
units="in",
width=14, #10*1,
height=6, #22*1,
pointsize=5, #12,
res=600,
compression="lzw")
pushViewport(viewport(layout = grid.layout(1, 2)))
print(plot_outflow_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(plot_X2_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
#Plot for X2
plot_X2_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=X2, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dashed"),name="",labels=c(2014:2019)) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019))+
#ggplot2::scale_linetype(guide = FALSE)+
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
guides(linetype=guide_legend(keywidth = 3, keyheight = 1),
colour=guide_legend(keywidth = 3, keyheight = 1))+
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_5yrs
#Plot for Outflow
plot_outflow_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dashed"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019)) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_5yrs
#Plot for X2
plot_X2_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=X2, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dashed"),name="",labels=c(2014:2019)) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019))+
#ggplot2::scale_linetype(guide = FALSE)+
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
guides(linetype=guide_legend(keywidth = 3, keyheight = 1),
colour=guide_legend(keywidth = 3, keyheight = 1))+
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_5yrs
#Print figure
tiff(filename=file.path(output_root,"Figure_Dayflow_5yrs.tiff"),
type="cairo",
units="in",
width=14, #10*1,
height=6, #22*1,
pointsize=5, #12,
res=600,
compression="lzw")
pushViewport(viewport(layout = grid.layout(1, 2)))
print(plot_outflow_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(plot_X2_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
#Plot for Outflow
plot_outflow_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dashed"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019)) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_5yrs
#Plot for X2
plot_X2_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=X2, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dashed"),name="",labels=c(2014:2019)) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019))+
#ggplot2::scale_linetype(guide = FALSE)+
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
guides(linetype=guide_legend(keywidth = 6, keyheight = 1),
colour=guide_legend(keywidth = 6, keyheight = 1))+
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_5yrs
#Print figure
tiff(filename=file.path(output_root,"Figure_Dayflow_5yrs.tiff"),
type="cairo",
units="in",
width=14, #10*1,
height=6, #22*1,
pointsize=5, #12,
res=600,
compression="lzw")
pushViewport(viewport(layout = grid.layout(1, 2)))
print(plot_outflow_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(plot_X2_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
#Plot for Outflow
plot_outflow_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019)) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_5yrs
#Plot for X2
plot_X2_5yrs <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_5yrs, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=X2, color=Year, linetype=Year),size=1)+
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","solid","dotdash"),name="",labels=c(2014:2019)) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#9A6324","#e6194B"),name="",labels=c(2014:2019))+
#ggplot2::scale_linetype(guide = FALSE)+
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
guides(linetype=guide_legend(keywidth = 6, keyheight = 1),
colour=guide_legend(keywidth = 6, keyheight = 1))+
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_5yrs
#Print figure
tiff(filename=file.path(output_root,"Figure_Dayflow_5yrs.tiff"),
type="cairo",
units="in",
width=14, #10*1,
height=6, #22*1,
pointsize=5, #12,
res=600,
compression="lzw")
pushViewport(viewport(layout = grid.layout(1, 2)))
print(plot_outflow_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(plot_X2_5yrs, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
unique(data_dayflow_summerfall_dry$WY)
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_5yrs
plot_outflow_dry
#Plot for Outflow
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_dry
data_dayflow_summerfall_dry<-data_dayflow_summerfall %>% filter(Sac_WY=="D")
unique(data_dayflow_summerfall_dry$WY)
data_dayflow_summerfall_dry$Year<-as.factor(data_dayflow_summerfall_dry$Year)
#Plot for Outflow
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_dry
#Subset just dry years
data_dayflow_summerfall_dry<-data_dayflow_summerfall %>% filter(Year %in% data_dayflow_summerfall[data_dayflow_summerfall$Sac_WY=="D",])
unique(data_dayflow_summerfall_dry$WY)
data_dayflow_summerfall_dry$Year<-as.factor(data_dayflow_summerfall_dry$Year)
#Plot for Outflow
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_dry
unique(data_dayflow_summerfall_dry$WY)
#Subset just dry years
dry_years<-unique(data_dayflow_summerfall[data_dayflow_summerfall$Sac_WY=="D",c("WY")])
data_dayflow_summerfall_dry<-data_dayflow_summerfall %>% filter(Year %in% dry_years,])
unique(data_dayflow_summerfall_dry$WY)
#Subset just dry years
dry_years<-unique(data_dayflow_summerfall[data_dayflow_summerfall$Sac_WY=="D",c("WY")])
data_dayflow_summerfall_dry<-data_dayflow_summerfall %>% filter(Year %in% dry_years)
unique(data_dayflow_summerfall_dry$WY)
unique(data_dayflow_summerfall_dry$Year)
data_dayflow_summerfall_dry$Year<-as.factor(data_dayflow_summerfall_dry$Year)
#Plot for Outflow
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_dry
#Plot for Outflow
plot_outflow_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=OUT, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),guide=FALSE) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),guide=FALSE) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.position = "none",
strip.background = element_rect(size=0.3)) +
ggplot2::ylab(bquote("Delta"~outflow~"("*ft^3*"/s)"))+
ggplot2::xlab("Date")
plot_outflow_dry
#Plot for X2
plot_X2_dry <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=data_dayflow_summerfall_dry, ggplot2::aes(x=as.Date(paste(2020,strftime(Date,format="%m-%d"),sep="-")), y=X2, color=Year, linetype=Year),size=1)+
#Need to change below when 2020 data is in
ggplot2::scale_linetype_manual(values = c("solid","solid","solid","solid","dotdash"),name="",labels=dry_years) +
ggplot2::scale_colour_manual(values = c("#000000","#000075","#4363d8","#469990","#e6194B"),name="",labels=dry_years) +
ggplot2::theme(plot.title=element_text(size=9),
axis.text.x=element_text(size=9, color="black"),
axis.text.y = element_text(size=8, color="black"),
axis.title.x = element_text(size = 9, angle = 00),
axis.title.y = element_text(size = 9, angle = 90),
strip.text = element_text(size = 7),
legend.text=element_text(size = 9),
strip.background = element_rect(size=0.3)) +
guides(linetype=guide_legend(keywidth = 6, keyheight = 1),
colour=guide_legend(keywidth = 6, keyheight = 1))+
ggplot2::ylab("X2 (km)")+
ggplot2::xlab("Date")
plot_X2_dry
#Print figure
tiff(filename=file.path(output_root,"Figure_Dayflow_dry_years.tiff"),
type="cairo",
units="in",
width=14, #10*1,
height=6, #22*1,
pointsize=5, #12,
res=600,
compression="lzw")
pushViewport(viewport(layout = grid.layout(1, 2)))
print(plot_outflow_dry, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(plot_X2_dry, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
dev.off()
View(data_wateryear)
CDEC4govquery <- function (id, sensor, interval = "D", start, end)
{
opt.original <- options(stringsAsFactors = FALSE)
if (missing(id) | missing(sensor) | missing(start) | missing(end))
stop("missing arguments", call. = FALSE)
u <- paste0("http://cdec4gov.water.ca.gov/cgi-progs/queryCSV?station_id=",
id, "&sensor_num=", sensor, "&dur_code=", interval, "&start_date=",
start, "&end_date=", end, "&data_wish=Download CSV Data Now")
u <- URLencode(u)
tf <- tempfile()
suppressWarnings(download.file(url = u, destfile = tf, quiet = TRUE))
d <- try(read.csv(file = tf, header = TRUE, skip = 1, quote = "'",
na.strings = "m", stringsAsFactors = FALSE, colClasses = c("character",
"character", "numeric")), silent = TRUE)
if (class(d) == "try-error") {
d <- data.frame(d1= gsub("-", "", start), d2="0000", d3=NA)  #d has 3 columns
}
#if (nrow(d) == 0)
#  stop("query returned no data", call. = FALSE)
d$datetime <- as.POSIXct(paste(d[[1]], d[[2]]), format = "%Y%m%d %H%M")
d[[1]] <- NULL
d[[1]] <- NULL
names(d)[1] <- paste("s", sensor, sep="")
return(d[, c("datetime", paste("s", sensor, sep=""))])
}
###############################
#Sensor 25 = TEMPERATURE (F)
#Sensor 27 = Turbidity (NTU)
#Sensor 28 = CHLOROPHYLL (ug/L)
#Sensor 61 = DISSOLVED OXYGEN (MG/L)
#Sensor 62 = PH (PH)
#Sensor 100 = Conductivity (us/cm)
FRK_2015_25<-CDEC4govquery(id="FRK", sensor="25", interval="E", start="6/19/2015 0:00", end="1/1/2016 0:00")
CDEC4govquery <- function (id, sensor, interval = "D", start, end)
{
opt.original <- options(stringsAsFactors = FALSE)
if (missing(id) | missing(sensor) | missing(start) | missing(end))
stop("missing arguments", call. = FALSE)
u <- paste0("http://cdec4gov.water.ca.gov/cgi-progs/queryCSV?station_id=",
id, "&sensor_num=", sensor, "&dur_code=", interval, "&start_date=",
start, "&end_date=", end, "&data_wish=Download CSV Data Now")
u <- URLencode(u)
tf <- tempfile()
suppressWarnings(download.file(url = u, destfile = tf, quiet = TRUE))
d <- try(read.csv(file = tf, header = TRUE, skip = 1, quote = "'",
na.strings = "m", stringsAsFactors = FALSE, colClasses = c("character",
"character", "numeric")), silent = TRUE)
if (class(d) == "try-error") {
d <- data.frame(d1= gsub("-", "", start), d2="0000", d3=NA)  #d has 3 columns
}
#if (nrow(d) == 0)
#  stop("query returned no data", call. = FALSE)
d$datetime <- as.POSIXct(paste(d[[1]], d[[2]]), format = "%Y%m%d %H%M")
d[[1]] <- NULL
d[[1]] <- NULL
names(d)[1] <- paste("s", sensor, sep="")
return(d[, c("datetime", paste("s", sensor, sep=""))])
}
###############################
#Sensor 25 = TEMPERATURE (F)
#Sensor 27 = Turbidity (NTU)
#Sensor 28 = CHLOROPHYLL (ug/L)
#Sensor 61 = DISSOLVED OXYGEN (MG/L)
#Sensor 62 = PH (PH)
#Sensor 100 = Conductivity (us/cm)
FRK_2015_25<-CDEC4govquery(id="FRK", sensor="25", interval="E", start="6/19/2015 0:00", end="1/1/2016 0:00")
View(FRK_2015_25)
CDEC4govquery <- function (id, sensor, interval = "D", start, end)
{
opt.original <- options(stringsAsFactors = FALSE)
if (missing(id) | missing(sensor) | missing(start) | missing(end))
stop("missing arguments", call. = FALSE)
u <- paste0("https://cdec.water.ca.gov/cgi-progs/queryCSV?station_id=",
id, "&sensor_num=", sensor, "&dur_code=", interval, "&start_date=",
start, "&end_date=", end, "&data_wish=Download CSV Data Now")
u <- URLencode(u)
tf <- tempfile()
suppressWarnings(download.file(url = u, destfile = tf, quiet = TRUE))
d <- try(read.csv(file = tf, header = TRUE, skip = 1, quote = "'",
na.strings = "m", stringsAsFactors = FALSE, colClasses = c("character",
"character", "numeric")), silent = TRUE)
if (class(d) == "try-error") {
d <- data.frame(d1= gsub("-", "", start), d2="0000", d3=NA)  #d has 3 columns
}
#if (nrow(d) == 0)
#  stop("query returned no data", call. = FALSE)
d$datetime <- as.POSIXct(paste(d[[1]], d[[2]]), format = "%Y%m%d %H%M")
d[[1]] <- NULL
d[[1]] <- NULL
names(d)[1] <- paste("s", sensor, sep="")
return(d[, c("datetime", paste("s", sensor, sep=""))])
}
###############################
#Sensor 25 = TEMPERATURE (F)
#Sensor 27 = Turbidity (NTU)
#Sensor 28 = CHLOROPHYLL (ug/L)
#Sensor 61 = DISSOLVED OXYGEN (MG/L)
#Sensor 62 = PH (PH)
#Sensor 100 = Conductivity (us/cm)
FRK_2015_25<-CDEC4govquery(id="BDL", sensor="25", interval="E", start="6/19/2020 0:00", end="10/1/2020 0:00")
View(FRK_2015_25)
CDEC4govquery <- function (id, sensor, interval = "D", start, end)
{
opt.original <- options(stringsAsFactors = FALSE)
if (missing(id) | missing(sensor) | missing(start) | missing(end))
stop("missing arguments", call. = FALSE)
u <- paste0("https://cdec.water.ca.gov/dynamicapp/selectQuery?Stations=",
id, "&SensorNums=", sensor, "&dur_code=", interval, "&Start=",
start, "&End=", end, "&data_wish=Download CSV Data Now")
u <- URLencode(u)
tf <- tempfile()
suppressWarnings(download.file(url = u, destfile = tf, quiet = TRUE))
d <- try(read.csv(file = tf, header = TRUE, skip = 1, quote = "'",
na.strings = "m", stringsAsFactors = FALSE, colClasses = c("character",
"character", "numeric")), silent = TRUE)
if (class(d) == "try-error") {
d <- data.frame(d1= gsub("-", "", start), d2="0000", d3=NA)  #d has 3 columns
}
#if (nrow(d) == 0)
#  stop("query returned no data", call. = FALSE)
d$datetime <- as.POSIXct(paste(d[[1]], d[[2]]), format = "%Y%m%d %H%M")
d[[1]] <- NULL
d[[1]] <- NULL
names(d)[1] <- paste("s", sensor, sep="")
return(d[, c("datetime", paste("s", sensor, sep=""))])
}
###############################
#Sensor 25 = TEMPERATURE (F)
#Sensor 27 = Turbidity (NTU)
#Sensor 28 = CHLOROPHYLL (ug/L)
#Sensor 61 = DISSOLVED OXYGEN (MG/L)
#Sensor 62 = PH (PH)
#Sensor 100 = Conductivity (us/cm)
FRK_2015_25<-CDEC4govquery(id="BDL", sensor="25", interval="E", start="6/19/2020 0:00", end="10/1/2020 0:00")
View(FRK_2015_25)
install.packages("sharpshootR")
library(sharpshootR)
pinecrest <- CDECquery(id='swb', sensor=15, interval='D', start='2012-09-01', end='2015-01-01')
View(pinecrest)
BDL <- CDECquery(id='BDL', sensor=25, interval='H', start='2020-10-01', end='2020-10-31')
View(BDL)
LIS_flow <- CDECquery(id='LIS', sensor=20, interval='E', start='2020-06-01', end='2020-10-31')
View(LIS_flow)
setwd("~/GitHub/Summer_Fall_Action/R")
View(LIS_flow)
str(LIS_flow)
plot_LIS_flow <- ggplot2::ggplot()+
ggplot2::theme_bw()+
ggplot2::geom_line(data=LIS_flow, ggplot2::aes(x=datetime, y=value),size=1)
plot_LIS_flow
plot_LIS_flow <- ggplot2::ggplot(data=LIS_flow, ggplot2::aes(x=datetime, y=value))+
ggplot2::theme_bw()+
ggplot2::geom_line(size=1,alpha=0.4)+ geom_point(alpha=0.4)
plot_LIS_flow
plot_LIS_flow <- ggplot2::ggplot(data=LIS_flow, ggplot2::aes(x=datetime, y=value))+
ggplot2::theme_bw()+
geom_point(alpha=0.4)+
geom_smooth()
plot_LIS_flow
